#!/usr/bin/env python2
from importlib import import_module
import os

import rospy
from mas_perception_libs import ImageDetectionService


if __name__ == '__main__':
    rospy.init_node('~image_detection_server')

    # get service name
    service_name = rospy.get_param('~service_name', '~detect_image')

    # get parameters for detector class
    class_annotation_file = rospy.get_param('~class_annotations', None)
    if class_annotation_file is None:
        raise ValueError('"~class_annotations" not specified')
    if not os.path.exists(class_annotation_file):
        raise ValueError('"~class_annotations" file does not exist: ' + class_annotation_file)

    kwargs_file = rospy.get_param('~kwargs_file', None)

    # import detection class
    detect_module = rospy.get_param('~detection_module', 'mas_perception_libs')
    detect_class_name = rospy.get_param('~detection_class', 'ImageDetectorTest')
    detection_class = getattr(import_module(detect_module), detect_class_name)

    # create service
    ImageDetectionService(service_name, detection_class, class_annotation_file, kwargs_file)

    rospy.spin()
